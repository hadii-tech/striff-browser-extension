/******/ (function() { // webpackBootstrap
var __webpack_exports__ = {};
/*!*********************************!*\
  !*** ./src/entry/background.js ***!
  \*********************************/
const GITHUB_TOKEN_KEY = "x-github-token";
const storage = chrome.storage.sync || chrome.storage.local;
let prInfo = [];
chrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {
  var senderTab = sender.tab;
  if (senderTab != null) {
    //var senderWindowId = sender.tab.windowId;
  }
  if (request.msg[0] == "openStriffWindow") {
    prInfo = request.msg[1];
    chrome.windows.create({
      url: "striff-report.html",
      type: "popup"
    });
  } else if (request.msg[0] == "setToken") {
    setGithubToken(request.msg[1]);
    sendResponse(true);
  } else if (request.msg[0] == "getToken") {
    storage.get(GITHUB_TOKEN_KEY, function (data) {
      var githubToken = data[GITHUB_TOKEN_KEY];
      sendResponse(githubToken);
    });
  } else if (request.msg[0] == "getPRInfo") {
    sendResponse(prInfo);
  }
  return true;
});
function setGithubToken(value) {
  const obj = {};
  obj[GITHUB_TOKEN_KEY] = value;
  storage.set(obj);
}
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFja2dyb3VuZC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUNBLE1BQU1BLGdCQUFnQixHQUFHLGdCQUFnQjtBQUN6QyxNQUFNQyxPQUFPLEdBQUdDLE1BQU0sQ0FBQ0QsT0FBTyxDQUFDRSxJQUFJLElBQUlELE1BQU0sQ0FBQ0QsT0FBTyxDQUFDRyxLQUFLO0FBQzNELElBQUlDLE1BQU0sR0FBRyxFQUFFO0FBRWZILE1BQU0sQ0FBQ0ksT0FBTyxDQUFDQyxTQUFTLENBQUNDLFdBQVcsQ0FBQyxVQUNuQ0MsT0FBTyxFQUNQQyxNQUFNLEVBQ05DLFlBQVksRUFDWjtFQUNBLElBQUlDLFNBQVMsR0FBR0YsTUFBTSxDQUFDRyxHQUFHO0VBQzFCLElBQUlELFNBQVMsSUFBSSxJQUFJLEVBQUU7SUFDckI7RUFBQTtFQUVGLElBQUlILE9BQU8sQ0FBQ0ssR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLGtCQUFrQixFQUFFO0lBQ3hDVCxNQUFNLEdBQUdJLE9BQU8sQ0FBQ0ssR0FBRyxDQUFDLENBQUMsQ0FBQztJQUN2QlosTUFBTSxDQUFDYSxPQUFPLENBQUNDLE1BQU0sQ0FBQztNQUFDQyxHQUFHLEVBQUUsb0JBQW9CO01BQUVDLElBQUksRUFBRTtJQUFPLENBQUMsQ0FBQztFQUNuRSxDQUFDLE1BQU0sSUFBSVQsT0FBTyxDQUFDSyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksVUFBVSxFQUFFO0lBQ3ZDSyxjQUFjLENBQUNWLE9BQU8sQ0FBQ0ssR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzlCSCxZQUFZLENBQUMsSUFBSSxDQUFDO0VBQ3BCLENBQUMsTUFBTSxJQUFJRixPQUFPLENBQUNLLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxVQUFVLEVBQUU7SUFDdkNiLE9BQU8sQ0FBQ21CLEdBQUcsQ0FBQ3BCLGdCQUFnQixFQUFFLFVBQVVxQixJQUFJLEVBQUU7TUFDNUMsSUFBSUMsV0FBVyxHQUFHRCxJQUFJLENBQUNyQixnQkFBZ0IsQ0FBQztNQUN4Q1csWUFBWSxDQUFDVyxXQUFXLENBQUM7SUFDM0IsQ0FBQyxDQUFDO0VBQ0osQ0FBQyxNQUFNLElBQUliLE9BQU8sQ0FBQ0ssR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLFdBQVcsRUFBRTtJQUN4Q0gsWUFBWSxDQUFDTixNQUFNLENBQUM7RUFDdEI7RUFDQSxPQUFPLElBQUk7QUFDYixDQUFDLENBQUM7QUFFRixTQUFTYyxjQUFjLENBQUNJLEtBQUssRUFBRTtFQUM3QixNQUFNQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO0VBQ2RBLEdBQUcsQ0FBQ3hCLGdCQUFnQixDQUFDLEdBQUd1QixLQUFLO0VBQzdCdEIsT0FBTyxDQUFDd0IsR0FBRyxDQUFDRCxHQUFHLENBQUM7QUFDbEIsQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0cmlmZi1icm93c2VyLWV4dGVuc2lvbi8uL3NyYy9lbnRyeS9iYWNrZ3JvdW5kLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlxuY29uc3QgR0lUSFVCX1RPS0VOX0tFWSA9IFwieC1naXRodWItdG9rZW5cIjtcbmNvbnN0IHN0b3JhZ2UgPSBjaHJvbWUuc3RvcmFnZS5zeW5jIHx8IGNocm9tZS5zdG9yYWdlLmxvY2FsO1xubGV0IHBySW5mbyA9IFtdXG5cbmNocm9tZS5ydW50aW1lLm9uTWVzc2FnZS5hZGRMaXN0ZW5lcihmdW5jdGlvbiAoXG4gIHJlcXVlc3QsXG4gIHNlbmRlcixcbiAgc2VuZFJlc3BvbnNlXG4pIHtcbiAgdmFyIHNlbmRlclRhYiA9IHNlbmRlci50YWJcbiAgaWYgKHNlbmRlclRhYiAhPSBudWxsKSB7XG4gICAgLy92YXIgc2VuZGVyV2luZG93SWQgPSBzZW5kZXIudGFiLndpbmRvd0lkO1xuICB9XG4gIGlmIChyZXF1ZXN0Lm1zZ1swXSA9PSBcIm9wZW5TdHJpZmZXaW5kb3dcIikge1xuICAgIHBySW5mbyA9IHJlcXVlc3QubXNnWzFdXG4gICAgY2hyb21lLndpbmRvd3MuY3JlYXRlKHt1cmw6IFwic3RyaWZmLXJlcG9ydC5odG1sXCIsIHR5cGU6IFwicG9wdXBcIn0pO1xuICB9IGVsc2UgaWYgKHJlcXVlc3QubXNnWzBdID09IFwic2V0VG9rZW5cIikge1xuICAgIHNldEdpdGh1YlRva2VuKHJlcXVlc3QubXNnWzFdKVxuICAgIHNlbmRSZXNwb25zZSh0cnVlKTtcbiAgfSBlbHNlIGlmIChyZXF1ZXN0Lm1zZ1swXSA9PSBcImdldFRva2VuXCIpIHtcbiAgICBzdG9yYWdlLmdldChHSVRIVUJfVE9LRU5fS0VZLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgdmFyIGdpdGh1YlRva2VuID0gZGF0YVtHSVRIVUJfVE9LRU5fS0VZXTtcbiAgICAgIHNlbmRSZXNwb25zZShnaXRodWJUb2tlbik7XG4gICAgfSk7XG4gIH0gZWxzZSBpZiAocmVxdWVzdC5tc2dbMF0gPT0gXCJnZXRQUkluZm9cIikge1xuICAgIHNlbmRSZXNwb25zZShwckluZm8pOyAgICBcbiAgfSBcbiAgcmV0dXJuIHRydWU7XG59KTtcblxuZnVuY3Rpb24gc2V0R2l0aHViVG9rZW4odmFsdWUpIHtcbiAgY29uc3Qgb2JqID0ge307XG4gIG9ialtHSVRIVUJfVE9LRU5fS0VZXSA9IHZhbHVlO1xuICBzdG9yYWdlLnNldChvYmopXG59XG5cbiJdLCJuYW1lcyI6WyJHSVRIVUJfVE9LRU5fS0VZIiwic3RvcmFnZSIsImNocm9tZSIsInN5bmMiLCJsb2NhbCIsInBySW5mbyIsInJ1bnRpbWUiLCJvbk1lc3NhZ2UiLCJhZGRMaXN0ZW5lciIsInJlcXVlc3QiLCJzZW5kZXIiLCJzZW5kUmVzcG9uc2UiLCJzZW5kZXJUYWIiLCJ0YWIiLCJtc2ciLCJ3aW5kb3dzIiwiY3JlYXRlIiwidXJsIiwidHlwZSIsInNldEdpdGh1YlRva2VuIiwiZ2V0IiwiZGF0YSIsImdpdGh1YlRva2VuIiwidmFsdWUiLCJvYmoiLCJzZXQiXSwic291cmNlUm9vdCI6IiJ9